Using TensorFlow backend.
[94mObteniendo datos...[0m
[93m[AVISO] 	Usuarios: 33537[0m
[93m[AVISO] 	Restaurantes: 5881[0m
[93m[AVISO] Cargando datos generados previamente...[0m
[94mCreando modelo...[0m


##################################################
 MODELV4
##################################################
 modelv4d2
##################################################
[93m[AVISO] Existen 1 combinaciones posibles[0m
--------------------------------------------------
fb6adaad5a464fd6d57307c5c3b39759
--------------------------------------------------
[1mlearning_rate: [0m1e-05
[1mdropout: [0m0.8
--------------------------------------------------
E	T_LOSS	MEAN_POS	PCNT	PCNT-1
1	1.0119	24.5082	0.3593	0.3118
2	0.9938	24.6056	0.3601	0.3126
3	0.9854	24.6661	0.3583	0.3108
4	0.958	23.7388	0.3481	0.3006
5	0.8816	22.6645	0.3292	0.2817
6	0.7991	21.9484	0.3194	0.2719
7	0.7428	21.8772	0.3156	0.2681
8	0.6979	21.6602	0.3098	0.2623
9	0.6552	21.3126	0.304	0.2565
10	0.6138	20.9977	0.2988	0.2513
11	0.5757	20.7314	0.2963	0.2488
12	0.5421	20.4675	0.294	0.2465
13	0.5124	20.2839	0.2911	0.2436
14	0.4842	20.0073	0.2897	0.2422
15	0.4589	19.8327	0.288	0.2405
16	0.4357	19.7933	0.2866	0.2391
17	0.4125	19.7473	0.2858	0.2383
18	0.3921	19.7509	0.2857	0.2382
19	0.3727	19.6602	0.2847	0.2372
20	0.3541	19.6558	0.2837	0.2362
21	0.3377	19.5894	0.2833	0.2358
22	0.3222	19.5005	0.2812	0.2337
23	0.3074	19.4858	0.2816	0.2341
24	0.2936	19.2617	0.2804	0.2329
25	0.2809	19.291	0.2794	0.2319
/usr/lib/python3/dist-packages/xlsxwriter/worksheet.py:833: DeprecationWarning: invalid escape sequence \w
  if re.match('\w:', url) or re.match(r'\\', url):
/usr/lib/python3/dist-packages/xlsxwriter/worksheet.py:962: DeprecationWarning: invalid escape sequence \s
  if re.search('^\s', token) or re.search('\s$', token):
/usr/lib/python3/dist-packages/xlsxwriter/worksheet.py:962: DeprecationWarning: invalid escape sequence \s
  if re.search('^\s', token) or re.search('\s$', token):
/usr/lib/python3/dist-packages/xlsxwriter/worksheet.py:3610: DeprecationWarning: invalid escape sequence \|
  elif re.match('(or|\|\|)', conditional):
/usr/lib/python3/dist-packages/xlsxwriter/worksheet.py:3840: DeprecationWarning: invalid escape sequence \.
  name = re.sub('\..*$', '', name)
/usr/lib/python3/dist-packages/xlsxwriter/worksheet.py:5136: DeprecationWarning: invalid escape sequence \s
  if re.search('^\s', string) or re.search('\s$', string):
/usr/lib/python3/dist-packages/xlsxwriter/worksheet.py:5136: DeprecationWarning: invalid escape sequence \s
  if re.search('^\s', string) or re.search('\s$', string):
/usr/lib/python3/dist-packages/xlsxwriter/sharedstrings.py:103: DeprecationWarning: invalid escape sequence \s
  if re.search('^\s', string) or re.search('\s$', string):
/usr/lib/python3/dist-packages/xlsxwriter/sharedstrings.py:103: DeprecationWarning: invalid escape sequence \s
  if re.search('^\s', string) or re.search('\s$', string):
/usr/lib/python3/dist-packages/xlsxwriter/comments.py:160: DeprecationWarning: invalid escape sequence \s
  if re.search('^\s', text) or re.search('\s$', text):
/usr/lib/python3/dist-packages/xlsxwriter/comments.py:160: DeprecationWarning: invalid escape sequence \s
  if re.search('^\s', text) or re.search('\s$', text):
----------------------------------------------------------------------------------------------------
N_FOTOS_TRAIN (>=)	N_ITEMS	%ITEMS	RND-MOD AC	CNT-MOD AC	MODELO
9	1891	0.43331805682859764	0.08422691260536187	0.21654118745685397	0.1816607773416731
5	3382	0.7749770852428964	0.07444596060420405	0.19382371468808587	0.20671020906286755
4	3733	0.8554078826764436	0.07543457608329263	0.1916297867085676	0.21326653099006634
2	4364	1.0	0.06632812992326476	0.18268963679006975	0.23237974703441397
1	4364	1.0	0.06632812992326476	0.18268963679006975	0.23237974703441397
----------------------------------------------------------------------------------------------------
26	0.2686	19.3153	0.2799	0.2324
27	0.2576	19.2573	0.2799	0.2324
28	0.2472	19.2218	0.2785	0.231
29	0.2371	19.1987	0.2779	0.2304
30	0.2279	19.1893	0.2774	0.23
31	0.2191	19.1645	0.2767	0.2292
32	0.2113	19.0422	0.2758	0.2284
33	0.2032	18.8882	0.2749	0.2274
34	0.1962	18.9874	0.275	0.2275
35	0.1895	18.7958	0.2744	0.2269
36	0.1831	18.9274	0.2751	0.2276
37	0.1771	18.7576	0.2724	0.2249
38	0.1716	18.9157	0.2736	0.2262
39	0.1664	18.8277	0.2725	0.225
40	0.161	18.852	0.2732	0.2257
41	0.1554	18.7791	0.2724	0.2249
42	0.1512	18.6973	0.272	0.2245
43	0.1467	18.665	0.2718	0.2243
44	0.1427	18.6444	0.2711	0.2236
45	0.1388	18.709	0.2713	0.2238
46	0.1348	18.5985	0.2711	0.2236
47	0.1311	18.5653	0.2713	0.2238
48	0.1275	18.6467	0.2715	0.224
49	0.1243	18.5438	0.2707	0.2232
50	0.1211	18.5923	0.27	0.2225
51	0.1177	18.4938	0.2699	0.2224
52	0.115	18.4691	0.2693	0.2219
53	0.1123	18.5108	0.2696	0.2221
54	0.1095	18.5477	0.2693	0.2219
55	0.1069	18.4512	0.2697	0.2222
56	0.1047	18.4427	0.2687	0.2213
57	0.1018	18.4521	0.2698	0.2223
58	0.0997	18.3586	0.2676	0.2201
59	0.0979	18.3336	0.2683	0.2208
60	0.0957	18.4255	0.2695	0.222
61	0.0935	18.2534	0.2677	0.2202
62	0.0915	18.3291	0.2679	0.2204
63	0.0896	18.2681	0.268	0.2205
64	0.0879	18.2587	0.268	0.2205
65	0.0858	18.3043	0.2675	0.22
66	0.0844	18.2479	0.2675	0.22
67	0.0827	18.4182	0.2696	0.2221
68	0.0813	18.1746	0.2668	0.2193
69	0.0793	18.2839	0.269	0.2215
70	0.0778	18.3233	0.2681	0.2206
71	0.076	18.288	0.2687	0.2212
72	0.0751	18.3018	0.2676	0.2201
73	0.0738	18.2308	0.2685	0.221
74	0.0724	18.3025	0.2675	0.22
75	0.0713	18.2379	0.2673	0.2198
76	0.07	18.2055	0.268	0.2205
77	0.0686	18.2429	0.2668	0.2193
78	0.0678	18.1503	0.2665	0.219
79	0.0662	18.1274	0.2667	0.2192
80	0.0654	18.2498	0.2664	0.2189
81	0.0643	18.2557	0.267	0.2195
82	0.0632	18.1503	0.2669	0.2194
83	0.0624	18.277	0.2676	0.2201
84	0.0612	18.327	0.2674	0.22
85	0.0605	18.2163	0.266	0.2185
86	0.0594	18.2076	0.2667	0.2192
87	0.0584	18.2395	0.2668	0.2193
88	0.0573	18.2367	0.2667	0.2192
89	0.0571	18.2582	0.2669	0.2194
90	0.0561	18.2862	0.2661	0.2186
91	0.055	18.1494	0.2662	0.2187
92	0.0539	18.1829	0.2656	0.2181
93	0.0535	18.2489	0.2667	0.2192
94	0.0527	18.168	0.2659	0.2184
95	0.0517	18.2422	0.2658	0.2183
96	0.0513	18.2401	0.2664	0.2189
97	0.0504	18.2083	0.2653	0.2178
98	0.0502	18.1648	0.2662	0.2187
99	0.0495	18.1705	0.2652	0.2177
100	0.0486	18.1929	0.2671	0.2196
101	0.048	18.1959	0.2662	0.2187
102	0.0475	18.173	0.2665	0.219
103	0.0467	18.1162	0.265	0.2175
104	0.0462	18.2193	0.2663	0.2188
105	0.0454	18.1577	0.2661	0.2187
106	0.0451	18.2388	0.2662	0.2188
107	0.0446	18.1322	0.2654	0.2179
108	0.0438	18.1405	0.2667	0.2192
109	0.0436	18.1391	0.2656	0.2181
110	0.043	18.1808	0.2657	0.2182
111	0.0424	18.1487	0.2658	0.2183
112	0.0418	18.1155	0.2649	0.2175
113	0.0413	18.1341	0.2644	0.2169
114	0.0409	18.0857	0.2643	0.2169
115	0.0404	18.1214	0.2653	0.2178
116	0.0399	18.094	0.2642	0.2167
117	0.0396	18.1833	0.2654	0.218
118	0.0393	18.1707	0.265	0.2176
119	0.0388	18.1315	0.265	0.2175
120	0.0382	18.1744	0.2652	0.2177
121	0.0376	18.3705	0.2655	0.2181
122	0.0374	18.2285	0.265	0.2175
123	0.0368	18.181	0.265	0.2175
124	0.0365	18.2007	0.2646	0.2171
125	0.0359	18.0509	0.2643	0.2168
126	0.0357	18.0522	0.2649	0.2174
127	0.0356	18.1751	0.265	0.2175
128	0.0352	18.1517	0.264	0.2165
129	0.0348	18.2023	0.2647	0.2172
130	0.0345	18.2468	0.2647	0.2172
131	0.0341	18.2149	0.2642	0.2167
132	0.0338	18.189	0.265	0.2175
133	0.0335	18.1865	0.2643	0.2168
134	0.033	18.1609	0.2652	0.2177
135	0.0325	18.2333	0.2655	0.218
136	0.0326	18.2005	0.2656	0.2181
137	0.0321	18.2122	0.266	0.2185
--------------------------------------------------
MIN: 0.21651853030000198
MAX: 0.31262407273806964
--------------------------------------------------
