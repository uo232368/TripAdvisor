Using TensorFlow backend.
[94mObteniendo datos...[0m
[93m[AVISO] 	Usuarios: 33537[0m
[93m[AVISO] 	Restaurantes: 5881[0m
[93m[AVISO] Cargando datos generados previamente...[0m
[94mCreando modelo...[0m


##################################################
 MODELV4
##################################################
 modelv4d2
##################################################
[93m[AVISO] Existen 1 combinaciones posibles[0m
--------------------------------------------------
fb6adaad5a464fd6d57307c5c3b39759
--------------------------------------------------
[1mlearning_rate: [0m1e-05
[1mdropout: [0m0.8
--------------------------------------------------
E	T_LOSS	MEAN_POS	PCNT	PCNT-1
1	1.0118	24.4583	0.3609	0.3134
2	0.9939	24.5105	0.3584	0.3109
3	0.9861	24.5137	0.3597	0.3122
4	0.9618	24.0665	0.3528	0.3054
5	0.8919	22.9315	0.3325	0.285
6	0.8083	22.2894	0.3222	0.2747
7	0.7497	21.8896	0.3172	0.2697
8	0.7039	21.473	0.3103	0.2628
9	0.6615	20.9604	0.3036	0.2561
10	0.6195	20.673	0.2983	0.2509
11	0.5797	20.4225	0.2953	0.2478
12	0.5442	20.2335	0.2929	0.2454
13	0.513	20.0215	0.2906	0.2431
14	0.4832	19.8934	0.2896	0.2421
15	0.4564	19.9542	0.2885	0.241
16	0.4322	19.692	0.2857	0.2382
17	0.4081	19.6079	0.2854	0.2379
18	0.3871	19.4565	0.2843	0.2368
19	0.367	19.467	0.2822	0.2347
20	0.3482	19.4462	0.2815	0.234
21	0.3315	19.3368	0.2803	0.2328
22	0.3158	19.2752	0.2805	0.233
23	0.301	19.154	0.2791	0.2316
24	0.2873	19.0206	0.2776	0.2301
25	0.2748	19.0495	0.2781	0.2306
/usr/lib/python3/dist-packages/xlsxwriter/worksheet.py:833: DeprecationWarning: invalid escape sequence \w
  if re.match('\w:', url) or re.match(r'\\', url):
/usr/lib/python3/dist-packages/xlsxwriter/worksheet.py:962: DeprecationWarning: invalid escape sequence \s
  if re.search('^\s', token) or re.search('\s$', token):
/usr/lib/python3/dist-packages/xlsxwriter/worksheet.py:962: DeprecationWarning: invalid escape sequence \s
  if re.search('^\s', token) or re.search('\s$', token):
/usr/lib/python3/dist-packages/xlsxwriter/worksheet.py:3610: DeprecationWarning: invalid escape sequence \|
  elif re.match('(or|\|\|)', conditional):
/usr/lib/python3/dist-packages/xlsxwriter/worksheet.py:3840: DeprecationWarning: invalid escape sequence \.
  name = re.sub('\..*$', '', name)
/usr/lib/python3/dist-packages/xlsxwriter/worksheet.py:5136: DeprecationWarning: invalid escape sequence \s
  if re.search('^\s', string) or re.search('\s$', string):
/usr/lib/python3/dist-packages/xlsxwriter/worksheet.py:5136: DeprecationWarning: invalid escape sequence \s
  if re.search('^\s', string) or re.search('\s$', string):
/usr/lib/python3/dist-packages/xlsxwriter/sharedstrings.py:103: DeprecationWarning: invalid escape sequence \s
  if re.search('^\s', string) or re.search('\s$', string):
/usr/lib/python3/dist-packages/xlsxwriter/sharedstrings.py:103: DeprecationWarning: invalid escape sequence \s
  if re.search('^\s', string) or re.search('\s$', string):
/usr/lib/python3/dist-packages/xlsxwriter/comments.py:160: DeprecationWarning: invalid escape sequence \s
  if re.search('^\s', text) or re.search('\s$', text):
/usr/lib/python3/dist-packages/xlsxwriter/comments.py:160: DeprecationWarning: invalid escape sequence \s
  if re.search('^\s', text) or re.search('\s$', text):
----------------------------------------------------------------------------------------------------
N_FOTOS_TRAIN (>=)	N_ITEMS	%ITEMS	RND-MOD AC	CNT-MOD AC	MODELO
9	1891	0.43331805682859764	0.08997761815578291	0.22229189300727498	0.1759100717912521
5	3382	0.7749770852428964	0.07911042270255879	0.19848817678644062	0.2020457469645128
4	3733	0.8554078826764436	0.07882770883652035	0.1950229194617953	0.2098733982368386
2	4364	1.0	0.06954195393530663	0.18590346080211165	0.22916592302237207
1	4364	1.0	0.06954195393530663	0.18590346080211165	0.22916592302237207
----------------------------------------------------------------------------------------------------
26	0.2627	18.9372	0.2767	0.2292
27	0.2518	18.8971	0.2772	0.2297
28	0.2415	18.9411	0.2763	0.2288
29	0.2313	18.8428	0.2754	0.2279
30	0.2226	18.7308	0.2758	0.2283
31	0.2136	18.6583	0.2737	0.2262
32	0.2062	18.6659	0.2726	0.2251
33	0.1988	18.4299	0.2716	0.2241
34	0.1915	18.4537	0.2724	0.2249
35	0.1853	18.423	0.2722	0.2247
36	0.179	18.4636	0.2714	0.224
37	0.1728	18.4276	0.2707	0.2232
38	0.1675	18.5167	0.2715	0.2241
39	0.1623	18.4629	0.2713	0.2239
40	0.1572	18.4986	0.2707	0.2232
41	0.1525	18.4393	0.2705	0.223
42	0.1479	18.3506	0.2707	0.2232
43	0.1434	18.3171	0.2697	0.2223
44	0.1395	18.4079	0.2696	0.2221
45	0.1358	18.3187	0.2691	0.2216
46	0.1321	18.3034	0.2695	0.222
47	0.1284	18.2984	0.2693	0.2218
48	0.1244	18.2401	0.2688	0.2213
49	0.1216	18.2576	0.2693	0.2218
50	0.1183	18.2498	0.2697	0.2222
51	0.1161	18.2374	0.2679	0.2204
52	0.1124	18.2159	0.2682	0.2207
53	0.1102	18.2553	0.2685	0.221
54	0.1071	18.1849	0.2679	0.2204
55	0.1047	18.2092	0.2679	0.2204
56	0.1024	18.1934	0.2678	0.2203
57	0.1003	18.2053	0.2677	0.2203
58	0.0976	18.1416	0.267	0.2195
59	0.096	18.1815	0.2679	0.2204
60	0.0936	18.1457	0.2676	0.2201
61	0.0917	18.1405	0.2677	0.2202
62	0.0898	18.206	0.2669	0.2194
63	0.0879	18.1402	0.2675	0.22
64	0.0861	18.2115	0.2675	0.22
65	0.0843	18.1916	0.2671	0.2196
66	0.0825	18.1519	0.2673	0.2198
67	0.0808	18.1111	0.2668	0.2193
68	0.0797	18.1079	0.2665	0.219
69	0.0776	18.0209	0.2657	0.2182
70	0.0762	18.0195	0.2662	0.2187
71	0.0749	18.1251	0.2663	0.2188
72	0.0739	18.0956	0.2659	0.2184
73	0.0723	18.1377	0.2664	0.2189
74	0.071	18.0392	0.2659	0.2185
75	0.07	18.0976	0.2662	0.2187
76	0.0684	18.0703	0.265	0.2175
77	0.0673	18.1476	0.2658	0.2184
78	0.0662	18.0926	0.2662	0.2187
79	0.0649	18.0648	0.2655	0.218
80	0.0644	18.1709	0.2662	0.2187
81	0.0635	18.0722	0.2661	0.2186
82	0.0623	18.0816	0.2664	0.2189
83	0.0613	18.0885	0.2656	0.2181
84	0.0601	18.1382	0.2661	0.2186
85	0.0594	18.0978	0.2658	0.2183
86	0.0585	18.1187	0.2661	0.2186
87	0.057	18.1501	0.2666	0.2192
88	0.0564	18.1978	0.2663	0.2188
--------------------------------------------------
MIN: 0.21754920079743606
MAX: 0.3134075444781395
--------------------------------------------------
